# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

# Only publish to AzDO NPM when a tag is pushed to master.
# NOTE: a PR needs to be opened from dev --> master, which includes version bump.
# If needs be, we can eventually automate.
trigger:
  branches:
    include:
    - dev
  paths:
    include:
    - core/*

pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: GitHub-Deploy-Creds
- group: npm-release-credentials

steps:
- task: NodeTool@0
  displayName: 'Use Node 10.x'
  inputs:
    versionSpec: 10.x

# Download secure file
# Download a secure file to the agent machine
- task: DownloadSecureFile@1
  # name: sshKey # The name with which to reference the secure file's path on the agent, like $(mySecureFile.secureFilePath)
  inputs:
    secureFile: multicloud_id_rsa

# Install an SSH key prior to a build or deployment
- task: InstallSSHKey@0 # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/install-ssh-key?view=azure-devops
  inputs:
    knownHostsEntry: $(KNOWN_HOSTS_ENTRY)
    sshPublicKey: $(SSH_PUBLIC_KEY)
    #sshPassphrase: $(SSH_PASS_PHRASE)
    sshKeySecureFile: multicloud_id_rsa
  env:
    KNOWN_HOSTS_ENTRY: $(KNOWN_HOSTS_ENTRY)
    SSH_PUBLIC_KEY: $(SSH_PUBLIC_KEY)  # map to the right format (camelCase) that Azure credentials understand

- task: Bash@3
  name: BumpNpmVersion
  displayName: Bump NPM Prerelease Version
  inputs:
    targetType: filePath
    filePath: ./scripts/version.sh
    arguments: '@multicloud/sls-core'
    workingDirectory: core
  env:
    SOURCE_BRANCH: $(Build.SourceBranch)

- task: Bash@3
  displayName: 'Publish sls-core to NPM'
  inputs:
    targetType: filePath
    filePath: ./scripts/publish.sh
    arguments: 'prerelease'
    workingDirectory: core
  env:
    NPM_TOKEN: $(NPM_TOKEN)
